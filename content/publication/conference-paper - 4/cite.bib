@InProceedings{10.1007/978-3-319-48992-6_23,
author="Alshara, Zakarea
and Seriai, Abdelhak-Djamel
and Tibermacine, Chouki
and Bouziane, Hinde Lilia
and Dony, Christophe
and Shatnawi, Anas",
editor="Tekinerdogan, Bedir
and Zdun, Uwe
and Babar, Ali",
title="Materializing Architecture Recovered from Object-Oriented Source Code in Component-Based Languages",
booktitle="Software Architecture",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="309--325",
abstract="In the literature of software engineering, many approaches have been proposed for the recovery of software architectures. These approaches propose to group classes into highly-cohesive and loosely-coupled clusters considered as architectural components. The recovered architecture plays mainly a documentation role, as high-level design views that enhance software understandability. In addition, architecture recovery can be considered as an intermediate step for migration to component-based platforms. This migration allows to fully benefit from all advantages brought by software component concept. For that, the recovered clusters should not be considered as simple packaging and deployment units. They should be treated as real components: true structural and behavior units that are instantiable from component descriptors and connected together to materialize the architecture of the software. In this paper, we propose an approach for revealing component descriptors, component instances and component-based architecture to materialize the recovered architecture of an object-oriented software in component-based languages. We applied our solution onto two well known component-based languages, OSGi and SOFA.",
isbn="978-3-319-48992-6"
}

